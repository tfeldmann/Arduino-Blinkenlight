# This is a basic workflow to help you get started with Actions

name: tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        example:
          [
            "examples/Blink",
            "examples/Count",
            "examples/Count2",
            "examples/FadePinBlink",
            "examples/PinBlink",
          ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      # Runs a single command using the runners shell
      - name: Install platformio
        run: |
          python -m pip install --upgrade pip
          pip install -U platformio

      # Runs a set of commands using the runners shell
      - name: Run the tests
        run: pio ci --lib=src --board=micro --board=uno --board=due --board=esp32
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.example }}
